<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="83" failures="0" errors="0" time="0.517">
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2023-01-31T21:18:20" time="0.159" tests="11">
    <testcase classname=" sanitize : Verify &quot;&quot;" name=" sanitize : Verify &quot;&quot;" time="0.001">
    </testcase>
    <testcase classname=" lambert93toWGPS : Verify &quot;&quot;" name=" lambert93toWGPS : Verify &quot;&quot;" time="0">
    </testcase>
    <testcase classname=" lambert93toWGPS : Verify &quot;&quot;" name=" lambert93toWGPS : Verify &quot;&quot;" time="0">
    </testcase>
    <testcase classname=" deepClone : Verify null" name=" deepClone : Verify null" time="0">
    </testcase>
    <testcase classname=" deepClone : Verify string" name=" deepClone : Verify string" time="0.001">
    </testcase>
    <testcase classname=" deepClone : Verify simple object" name=" deepClone : Verify simple object" time="0">
    </testcase>
    <testcase classname=" deepClone : Verify simple array" name=" deepClone : Verify simple array" time="0">
    </testcase>
    <testcase classname=" deepClone : Verify object with date" name=" deepClone : Verify object with date" time="0">
    </testcase>
    <testcase classname=" deepCompare : Verify null" name=" deepCompare : Verify null" time="0">
    </testcase>
    <testcase classname=" deepCompare : Verify two empty objets" name=" deepCompare : Verify two empty objets" time="0.001">
    </testcase>
    <testcase classname=" deepCompare : Verify two empty objets" name=" deepCompare : Verify two empty objets" time="0">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2023-01-31T21:18:21" time="0.057" tests="28">
    <testcase classname=" wrap : Verify {}" name=" wrap : Verify {}" time="0">
    </testcase>
    <testcase classname=" wrap : Verify []" name=" wrap : Verify []" time="0">
    </testcase>
    <testcase classname=" extractErrors : Verify []" name=" extractErrors : Verify []" time="0">
    </testcase>
    <testcase classname=" extractErrors : Verify {}" name=" extractErrors : Verify {}" time="0">
    </testcase>
    <testcase classname=" extractErrors : Verify null" name=" extractErrors : Verify null" time="0">
    </testcase>
    <testcase classname=" extractErrors : Verify simple" name=" extractErrors : Verify simple" time="0">
    </testcase>
    <testcase classname=" getNewNormalizedObject : Verify vide" name=" getNewNormalizedObject : Verify vide" time="0.007">
    </testcase>
    <testcase classname=" getNewNormalizedObject : Verify &quot;&quot;" name=" getNewNormalizedObject : Verify &quot;&quot;" time="0">
    </testcase>
    <testcase classname=" getNewNormalizedObject : Verify simple" name=" getNewNormalizedObject : Verify simple" time="0.001">
    </testcase>
    <testcase classname=" normalizedObjectUpdate : Verify empty items without object" name=" normalizedObjectUpdate : Verify empty items without object" time="0">
    </testcase>
    <testcase classname=" normalizedObjectUpdate : Verify empty items with object ignoreAdd" name=" normalizedObjectUpdate : Verify empty items with object ignoreAdd" time="0">
    </testcase>
    <testcase classname=" normalizedObjectUpdate : Verify empty items with object not ignoreAdd" name=" normalizedObjectUpdate : Verify empty items with object not ignoreAdd" time="0">
    </testcase>
    <testcase classname=" normalizedObjectUpdate : Verify items without object" name=" normalizedObjectUpdate : Verify items without object" time="0">
    </testcase>
    <testcase classname=" normalizedObjectUpdate : Verify items with other object" name=" normalizedObjectUpdate : Verify items with other object" time="0.001">
    </testcase>
    <testcase classname=" normalizedObjectUpdate : Verify items with complex object" name=" normalizedObjectUpdate : Verify items with complex object" time="0">
    </testcase>
    <testcase classname=" normalizedObjectUpdate : Verify items with very complex object" name=" normalizedObjectUpdate : Verify items with very complex object" time="0">
    </testcase>
    <testcase classname=" normalizedObjectRemove : Verify empty items without object" name=" normalizedObjectRemove : Verify empty items without object" time="0">
    </testcase>
    <testcase classname=" normalizedObjectRemove : Verify empty items with object" name=" normalizedObjectRemove : Verify empty items with object" time="0.001">
    </testcase>
    <testcase classname=" normalizedObjectRemove : Verify items without object" name=" normalizedObjectRemove : Verify items without object" time="0">
    </testcase>
    <testcase classname=" normalizedObjectRemove : Verify items with object" name=" normalizedObjectRemove : Verify items with object" time="0">
    </testcase>
    <testcase classname=" jsonApiNormalizer : Verify null" name=" jsonApiNormalizer : Verify null" time="0">
    </testcase>
    <testcase classname=" jsonApiNormalizer : Verify error " name=" jsonApiNormalizer : Verify error " time="0">
    </testcase>
    <testcase classname=" jsonApiNormalizer : Verify errors " name=" jsonApiNormalizer : Verify errors " time="0.001">
    </testcase>
    <testcase classname=" jsonApiNormalizer : Verify simple object" name=" jsonApiNormalizer : Verify simple object" time="0">
    </testcase>
    <testcase classname=" jsonApiNormalizer : Verify simple object with count" name=" jsonApiNormalizer : Verify simple object with count" time="0">
    </testcase>
    <testcase classname=" jsonApiNormalizer : Verify simple object id num" name=" jsonApiNormalizer : Verify simple object id num" time="0">
    </testcase>
    <testcase classname=" jsonApiNormalizer : Verify simple object with items" name=" jsonApiNormalizer : Verify simple object with items" time="0.001">
    </testcase>
    <testcase classname=" jsonApiNormalizer : Verify list object with items" name=" jsonApiNormalizer : Verify list object with items" time="0">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2023-01-31T21:18:21" time="0.125" tests="16">
    <testcase classname=" queryStringToObject : Verify &quot;&quot;" name=" queryStringToObject : Verify &quot;&quot;" time="0">
    </testcase>
    <testcase classname=" queryStringToObject : Verify null" name=" queryStringToObject : Verify null" time="0">
    </testcase>
    <testcase classname=" queryStringToObject : Verify ?param1=45" name=" queryStringToObject : Verify ?param1=45" time="0">
    </testcase>
    <testcase classname=" queryStringToObject : Verify param1=45" name=" queryStringToObject : Verify param1=45" time="0">
    </testcase>
    <testcase classname=" queryStringToObject : Verify ?param1=45&amp;param2=test" name=" queryStringToObject : Verify ?param1=45&amp;param2=test" time="0">
    </testcase>
    <testcase classname=" queryStringToObject : Verify ?param1=45&amp;param2=test1&amp;param2=test2" name=" queryStringToObject : Verify ?param1=45&amp;param2=test1&amp;param2=test2" time="0">
    </testcase>
    <testcase classname=" queryStringToObject : Verify ?param1=45&amp;param2[]=test1&amp;param2[]=test2" name=" queryStringToObject : Verify ?param1=45&amp;param2[]=test1&amp;param2[]=test2" time="0">
    </testcase>
    <testcase classname=" queryStringToObject : Verify param1=45&amp;param2[]=test1&amp;param2[]=test2" name=" queryStringToObject : Verify param1=45&amp;param2[]=test1&amp;param2[]=test2" time="0">
    </testcase>
    <testcase classname=" objectToQueryString : Verify null" name=" objectToQueryString : Verify null" time="0">
    </testcase>
    <testcase classname=" objectToQueryString : Verify {}" name=" objectToQueryString : Verify {}" time="0">
    </testcase>
    <testcase classname=" objectToQueryString : Verify {param1: 45}" name=" objectToQueryString : Verify {param1: 45}" time="0">
    </testcase>
    <testcase classname=" objectToQueryString : Verify {param1: true}" name=" objectToQueryString : Verify {param1: true}" time="0">
    </testcase>
    <testcase classname=" objectToQueryString : Verify {param1: 45, param2: test}" name=" objectToQueryString : Verify {param1: 45, param2: test}" time="0">
    </testcase>
    <testcase classname=" objectToQueryString : Verify {param1: 45, param2: [test1, test2]}" name=" objectToQueryString : Verify {param1: 45, param2: [test1, test2]}" time="0">
    </testcase>
    <testcase classname=" objectToQueryString : Verify {param1: 45, param2: [test1, test2]} with emptyBrackets" name=" objectToQueryString : Verify {param1: 45, param2: [test1, test2]} with emptyBrackets" time="0">
    </testcase>
    <testcase classname=" objectToQueryString : Verify {param1: 45, param2: { between: [Date, Date] } } with emptyBrackets" name=" objectToQueryString : Verify {param1: 45, param2: { between: [Date, Date] } } with emptyBrackets" time="0">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2023-01-31T21:18:21" time="0.103" tests="17">
    <testcase classname=" uniqueId : Verify null id" name=" uniqueId : Verify null id" time="0.001">
    </testcase>
    <testcase classname=" uniqueId : Verify standard" name=" uniqueId : Verify standard" time="0">
    </testcase>
    <testcase classname=" setModelValue : Verify empty model" name=" setModelValue : Verify empty model" time="0">
    </testcase>
    <testcase classname=" setModelValue : Verify simple value" name=" setModelValue : Verify simple value" time="0">
    </testcase>
    <testcase classname=" setModelValue : Verify complex value" name=" setModelValue : Verify complex value" time="0.001">
    </testcase>
    <testcase classname=" getNewModel : Verify simple model number id" name=" getNewModel : Verify simple model number id" time="0">
    </testcase>
    <testcase classname=" getNewModel : Verify simple model string id" name=" getNewModel : Verify simple model string id" time="0">
    </testcase>
    <testcase classname=" getNewModel : Verify model" name=" getNewModel : Verify model" time="0">
    </testcase>
    <testcase classname=" isEmptyModel : Verify null" name=" isEmptyModel : Verify null" time="0">
    </testcase>
    <testcase classname=" isEmptyModel : Verify empty object" name=" isEmptyModel : Verify empty object" time="0">
    </testcase>
    <testcase classname=" isEmptyModel : Verify object with empty id" name=" isEmptyModel : Verify object with empty id" time="0">
    </testcase>
    <testcase classname=" isEmptyModel : Verify object with id" name=" isEmptyModel : Verify object with id" time="0">
    </testcase>
    <testcase classname=" normalizedObjectModeler : Verify model with list NormalizedObject without id" name=" normalizedObjectModeler : Verify model with list NormalizedObject without id" time="0">
    </testcase>
    <testcase classname=" normalizedObjectModeler : Verify model with list NormalizedObject with id" name=" normalizedObjectModeler : Verify model with list NormalizedObject with id" time="0">
    </testcase>
    <testcase classname=" normalizedObjectModeler : Verify model with NormalizedObject without id" name=" normalizedObjectModeler : Verify model with NormalizedObject without id" time="0.001">
    </testcase>
    <testcase classname=" normalizedObjectModeler : Verify model with NormalizedObject with id" name=" normalizedObjectModeler : Verify model with NormalizedObject with id" time="0">
    </testcase>
    <testcase classname=" normalizedObjectFirstModel : first elem" name=" normalizedObjectFirstModel : first elem" time="0">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2023-01-31T21:18:21" time="0.014" tests="11">
    <testcase classname=" getNewJsonApi : Verify simple number id" name=" getNewJsonApi : Verify simple number id" time="0">
    </testcase>
    <testcase classname=" getNewJsonApi : Verify simple string id" name=" getNewJsonApi : Verify simple string id" time="0">
    </testcase>
    <testcase classname=" getNewJsonApi : Verify simple number id 0" name=" getNewJsonApi : Verify simple number id 0" time="0.001">
    </testcase>
    <testcase classname=" getNewJsonApi : Verify simple string id &quot;0&quot;" name=" getNewJsonApi : Verify simple string id &quot;0&quot;" time="0">
    </testcase>
    <testcase classname=" getNewJsonApi : Verify simple id empty" name=" getNewJsonApi : Verify simple id empty" time="0">
    </testcase>
    <testcase classname=" getNewJsonApi : Verify simple id null" name=" getNewJsonApi : Verify simple id null" time="0">
    </testcase>
    <testcase classname=" getJsonApi : Verify {}" name=" getJsonApi : Verify {}" time="0">
    </testcase>
    <testcase classname=" getJsonApi : Verify null" name=" getJsonApi : Verify null" time="0">
    </testcase>
    <testcase classname=" getJsonApi : Verify simple object" name=" getJsonApi : Verify simple object" time="0">
    </testcase>
    <testcase classname=" getJsonApi : Verify object with relation" name=" getJsonApi : Verify object with relation" time="0">
    </testcase>
    <testcase classname=" getJsonApi : Verify object with recursion" name=" getJsonApi : Verify object with recursion" time="0">
    </testcase>
  </testsuite>
</testsuites>